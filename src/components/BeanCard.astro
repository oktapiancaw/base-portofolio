---
import { Image } from "astro:assets";

interface Props {
  href: string;
  title: string;
  producer: string;
  producerImg: string;
  tasteNotes: string;
}

const { href, title, producer, producerImg, tasteNotes } = Astro.props;
const tasteNotesArray = tasteNotes.split(", ").slice(0, 3);
---

<a
  class="relative overflow-hidden rounded-2xl bg-gray-300/30 p-[1px] dark:bg-gray-600/30"
  href={href}
  target="_blank"
  rel="noopener noreferrer"
  style="position: relative; overflow: hidden;"
  ><div
    class="relative h-full w-full rounded-[15px] bg-white p-4 dark:bg-gray-950"
  >
    <div class="relative flex w-full flex-row justify-left">
      <div class="flex-shrink-0 flex items-center">
        <Image
          src={producerImg}
          alt=""
          width={80}
          height={80}
          class="w-18 h-18 rounded-lg flex items-center space-x-2 border-2 border-gray-200 dark:border-gray-800 shadow-lg shadow-gray-300/50 dark:shadow-gray-900/50 mr-2"
          loading="eager"
        />
      </div>
      <div class="flex flex-col justify-start items-start">
        <h4 class="font-bold dark:text-gray-100 text-base md:text-lg">
          {title.toUpperCase()}
        </h4><p
          class="text-gray-500 hidden sm:inline-block text-sm dark:text-gray-400"
        >
          {producer}
        </p>
        <p class="space-x-2">
          {
            tasteNotesArray.map((note: string) => (
              <span class="group relative inline-flex shrink-0 items-center gap-[1px] rounded-full bg-gray-100 px-2.5 py-1 my-1.5 text-xs text-black transition-colors duration-200 hover:bg-gray-600 hover:text-gray-50 dark:bg-gray-800 dark:text-gray-100 dark:hover:bg-gray-700">
                #{note}
              </span>
            ))
          }
        </p>
      </div>
    </div>
  </div></a
>
