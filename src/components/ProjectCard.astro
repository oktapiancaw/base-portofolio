---
import type { ProjectType } from "../constant/schema.types";
import { SquareArrowOutUpRight } from "@lucide/astro";

interface Props {
  project: ProjectType;
}

const { project } = Astro.props;
---

<div
  class="flex w-full flex-col hover:backdrop-blur-lg flex-1 space-y-2 px-4 pt-3 pb-6 shadow-lg shadow-gray-200/20 dark:shadow-gray-950/20 rounded-md border border-gray-200 from-gray-50/20 to-gray-200/20 dark:border-gray-900 bg-gradient-to-b dark:from-gray-900/20 dark:to-gray-950/20"

>
  <div class="flex justify-between items-center">
    <div class="flex space-x-2 items-center">
      <p class="font-semibold text-gray-800 dark:text-gray-100 text-base sm:text-lg mr-2">
        {project.name}
      </p>
      {
        project.tech_stacks?.map((tech) => (
          <span class="capitalize whitespace-nowrap hidden sm:block text-xs px-1.5 py-1 rounded-sm border border-gray-400 hover:border-gray-200  dark:border-gray-800 hover:dark:border-gray-900 transition-colors duration-300 text-gray-600 hover:text-gray-400 cursor-default dark:text-gray-400 hover:dark:text-gray-700">
            {tech}
          </span>
        ))
      }
    </div>
    <div
      class={`p-1 mr-1 rounded-full border-6 ${project.status === "active" ? "bg-green-400 dark:bg-green-700/50 border-green-300 dark:border-green-500/20" : "bg-yellow-400 dark:bg-yellow-700/50 border-yellow-300 dark:border-yellow-500/20"}`}
    >
    </div>
  </div>
  <div class="flex justify-between items-center">
    <p class="font-normal text-xs sm:text-sm text-gray-600 dark:text-gray-400">
      {project?.description}
    </p>
    {
      project.url && (
        <a href={project.url} class="p-1">
          <SquareArrowOutUpRight class="size-4 text-gray-600 hover:text-blue-900 duration-150 transition-colors" />
        </a>
      )
    }
  </div>
</div>
